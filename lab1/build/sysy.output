Terminals unused in grammar

    comment


State 137 conflicts: 1 shift/reduce


Grammar

    0 $accept: CompUnit $end

    1 CompUnit: CompUnit CompUnit_
    2         | CompUnit_

    3 CompUnit_: Decl
    4          | FuncDef

    5 Ident: IDENT

    6 Number: NUM

    7 Decl: VarDecl

    8 VarDecl: INT VarDef VarDef_ SEMI

    9 VarDef_: ε
   10        | VarDef_ COMMA VarDef

   11 VarDef: Ident ASSIGNOP InitVal
   12       | Ident ArryList

   13 ArryList: ε
   14         | ArryList LB Number RB

   15 InitVal: Exp

   16 FuncDef: INT Ident LP FuncParams RP Block
   17        | INT Ident LP RP Block
   18        | VOID Ident LP FuncParams RP Block
   19        | VOID Ident LP RP Block

   20 FuncParams: FuncParam FuncParam_

   21 FuncParam: INT Ident
   22          | INT Ident LB RB ArryList

   23 FuncParam_: ε
   24           | FuncParam_ COMMA FuncParam

   25 Block: LC BlockItems RC

   26 BlockItems: ε
   27           | BlockItems BlockItem

   28 BlockItem: Decl
   29          | Stmt

   30 Stmt: LVal ASSIGNOP Exp SEMI
   31     | Exp SEMI
   32     | Block
   33     | IFStmt
   34     | WHILE LP Exp RP Stmt
   35     | BREAK SEMI
   36     | CONTINUE SEMI
   37     | RETURN Exp SEMI
   38     | RETURN SEMI

   39 IFStmt: IF LP Exp RP Stmt
   40       | IF LP Exp RP Stmt ELSE Stmt

   41 Exp: LOrExp

   42 LOrExp: LAndExp
   43       | LOrExp OR LAndExp

   44 LAndExp: EqExp
   45        | LAndExp AND EqExp

   46 EqExp: RelExp
   47      | EqExp EQ RelExp
   48      | EqExp NE RelExp

   49 RelExp: AddExp
   50       | RelExp LT AddExp
   51       | RelExp LE AddExp
   52       | RelExp GT AddExp
   53       | RelExp GE AddExp

   54 AddExp: MulExp
   55       | AddExp ADD MulExp
   56       | AddExp SUB MulExp

   57 MulExp: UnaryExp
   58       | MulExp MUL UnaryExp
   59       | MulExp DIV UnaryExp
   60       | MulExp MOD UnaryExp

   61 UnaryExp: PirmaryExp
   62         | Ident LP FuncRParams RP
   63         | Ident LP RP
   64         | ADD UnaryExp
   65         | SUB UnaryExp
   66         | NOT UnaryExp

   67 PirmaryExp: LP Exp RP
   68           | LVal
   69           | Number

   70 LVal: Ident LValList

   71 LValList: ε
   72         | LValList LB Exp RB

   73 FuncRParams: Exp FuncRP_

   74 FuncRP_: ε
   75        | FuncRP_ COMMA Exp


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT (258) 8 16 17 21 22
    VOID (259) 18 19
    NUM <ival> (260) 6
    ADD (261) 55 64
    SUB (262) 56 65
    MUL (263) 58
    DIV (264) 59
    AND (265) 45
    NOT (266) 66
    OR (267) 43
    MOD (268) 60
    RP (269) 16 17 18 19 34 39 40 62 63 67
    LP (270) 16 17 18 19 34 39 40 62 63 67
    RB (271) 14 22 72
    LB (272) 14 22 72
    RC (273) 25
    LC (274) 25
    SEMI (275) 8 30 31 35 36 37 38
    COMMA (276) 10 24 75
    IF (277) 39 40
    ELSE (278) 40
    WHILE (279) 34
    BREAK (280) 35
    CONTINUE (281) 36
    RETURN (282) 37 38
    LT (283) 50
    LE (284) 51
    GT (285) 52
    GE (286) 53
    EQ (287) 47
    NE (288) 48
    ASSIGNOP (289) 11 30
    IDENT (290) 5
    comment (291)


Nonterminals, with rules where they appear

    $accept (37)
        on left: 0
    CompUnit <comp> (38)
        on left: 1 2
        on right: 0 1
    CompUnit_ <stmt> (39)
        on left: 3 4
        on right: 1 2
    Ident <ident> (40)
        on left: 5
        on right: 11 12 16 17 18 19 21 22 62 63 70
    Number <integer> (41)
        on left: 6
        on right: 14 69
    Decl <stmt> (42)
        on left: 7
        on right: 3 28
    VarDecl <varDecl> (43)
        on left: 8
        on right: 7
    VarDef_ <vecTreeVarDef> (44)
        on left: 9 10
        on right: 8 10
    VarDef <varDef> (45)
        on left: 11 12
        on right: 8 10
    ArryList <vecTreeInt> (46)
        on left: 13 14
        on right: 12 14 22
    InitVal <expr> (47)
        on left: 15
        on right: 11
    FuncDef <stmt> (48)
        on left: 16 17 18 19
        on right: 4
    FuncParams <funcPs> (49)
        on left: 20
        on right: 16 18
    FuncParam <funcP> (50)
        on left: 21 22
        on right: 20 24
    FuncParam_ <vecFuncParam> (51)
        on left: 23 24
        on right: 20 24
    Block <stmt> (52)
        on left: 25
        on right: 16 17 18 19 32
    BlockItems <vecStmt> (53)
        on left: 26 27
        on right: 25 27
    BlockItem <stmt> (54)
        on left: 28 29
        on right: 27
    Stmt <stmt> (55)
        on left: 30 31 32 33 34 35 36 37 38
        on right: 29 34 39 40
    IFStmt <stmt> (56)
        on left: 39 40
        on right: 33
    Exp <expr> (57)
        on left: 41
        on right: 15 30 31 34 37 39 40 67 72 73 75
    LOrExp <expr> (58)
        on left: 42 43
        on right: 41 43
    LAndExp <expr> (59)
        on left: 44 45
        on right: 42 43 45
    EqExp <expr> (60)
        on left: 46 47 48
        on right: 44 45 47 48
    RelExp <expr> (61)
        on left: 49 50 51 52 53
        on right: 46 47 48 50 51 52 53
    AddExp <expr> (62)
        on left: 54 55 56
        on right: 49 50 51 52 53 55 56
    MulExp <expr> (63)
        on left: 57 58 59 60
        on right: 54 55 56 58 59 60
    UnaryExp <expr> (64)
        on left: 61 62 63 64 65 66
        on right: 57 58 59 60 64 65 66
    PirmaryExp <expr> (65)
        on left: 67 68 69
        on right: 61
    LVal <lVal> (66)
        on left: 70
        on right: 30 68
    LValList <vecTreeExpr> (67)
        on left: 71 72
        on right: 70 72
    FuncRParams <funcRP> (68)
        on left: 73
        on right: 62
    FuncRP_ <vecTreeExpr> (69)
        on left: 74 75
        on right: 73 75


State 0

    0 $accept: • CompUnit $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    CompUnit   go to state 3
    CompUnit_  go to state 4
    Decl       go to state 5
    VarDecl    go to state 6
    FuncDef    go to state 7


State 1

    8 VarDecl: INT • VarDef VarDef_ SEMI
   16 FuncDef: INT • Ident LP FuncParams RP Block
   17        | INT • Ident LP RP Block

    IDENT  shift, and go to state 8

    Ident   go to state 9
    VarDef  go to state 10


State 2

   18 FuncDef: VOID • Ident LP FuncParams RP Block
   19        | VOID • Ident LP RP Block

    IDENT  shift, and go to state 8

    Ident  go to state 11


State 3

    0 $accept: CompUnit • $end
    1 CompUnit: CompUnit • CompUnit_

    $end  shift, and go to state 12
    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    CompUnit_  go to state 13
    Decl       go to state 5
    VarDecl    go to state 6
    FuncDef    go to state 7


State 4

    2 CompUnit: CompUnit_ •

    $default  reduce using rule 2 (CompUnit)


State 5

    3 CompUnit_: Decl •

    $default  reduce using rule 3 (CompUnit_)


State 6

    7 Decl: VarDecl •

    $default  reduce using rule 7 (Decl)


State 7

    4 CompUnit_: FuncDef •

    $default  reduce using rule 4 (CompUnit_)


State 8

    5 Ident: IDENT •

    $default  reduce using rule 5 (Ident)


State 9

   11 VarDef: Ident • ASSIGNOP InitVal
   12       | Ident • ArryList
   16 FuncDef: INT Ident • LP FuncParams RP Block
   17        | INT Ident • LP RP Block

    LP        shift, and go to state 14
    ASSIGNOP  shift, and go to state 15

    $default  reduce using rule 13 (ArryList)

    ArryList  go to state 16


State 10

    8 VarDecl: INT VarDef • VarDef_ SEMI

    $default  reduce using rule 9 (VarDef_)

    VarDef_  go to state 17


State 11

   18 FuncDef: VOID Ident • LP FuncParams RP Block
   19        | VOID Ident • LP RP Block

    LP  shift, and go to state 18


State 12

    0 $accept: CompUnit $end •

    $default  accept


State 13

    1 CompUnit: CompUnit CompUnit_ •

    $default  reduce using rule 1 (CompUnit)


State 14

   16 FuncDef: INT Ident LP • FuncParams RP Block
   17        | INT Ident LP • RP Block

    INT  shift, and go to state 19
    RP   shift, and go to state 20

    FuncParams  go to state 21
    FuncParam   go to state 22


State 15

   11 VarDef: Ident ASSIGNOP • InitVal

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    InitVal     go to state 30
    Exp         go to state 31
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 16

   12 VarDef: Ident ArryList •
   14 ArryList: ArryList • LB Number RB

    LB  shift, and go to state 41

    $default  reduce using rule 12 (VarDef)


State 17

    8 VarDecl: INT VarDef VarDef_ • SEMI
   10 VarDef_: VarDef_ • COMMA VarDef

    SEMI   shift, and go to state 42
    COMMA  shift, and go to state 43


State 18

   18 FuncDef: VOID Ident LP • FuncParams RP Block
   19        | VOID Ident LP • RP Block

    INT  shift, and go to state 19
    RP   shift, and go to state 44

    FuncParams  go to state 45
    FuncParam   go to state 22


State 19

   21 FuncParam: INT • Ident
   22          | INT • Ident LB RB ArryList

    IDENT  shift, and go to state 8

    Ident  go to state 46


State 20

   17 FuncDef: INT Ident LP RP • Block

    LC  shift, and go to state 47

    Block  go to state 48


State 21

   16 FuncDef: INT Ident LP FuncParams • RP Block

    RP  shift, and go to state 49


State 22

   20 FuncParams: FuncParam • FuncParam_

    $default  reduce using rule 23 (FuncParam_)

    FuncParam_  go to state 50


State 23

    6 Number: NUM •

    $default  reduce using rule 6 (Number)


State 24

   64 UnaryExp: ADD • UnaryExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    UnaryExp    go to state 51
    PirmaryExp  go to state 39
    LVal        go to state 40


State 25

   65 UnaryExp: SUB • UnaryExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    UnaryExp    go to state 52
    PirmaryExp  go to state 39
    LVal        go to state 40


State 26

   66 UnaryExp: NOT • UnaryExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    UnaryExp    go to state 53
    PirmaryExp  go to state 39
    LVal        go to state 40


State 27

   67 PirmaryExp: LP • Exp RP

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 54
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 28

   62 UnaryExp: Ident • LP FuncRParams RP
   63         | Ident • LP RP
   70 LVal: Ident • LValList

    LP  shift, and go to state 55

    $default  reduce using rule 71 (LValList)

    LValList  go to state 56


State 29

   69 PirmaryExp: Number •

    $default  reduce using rule 69 (PirmaryExp)


State 30

   11 VarDef: Ident ASSIGNOP InitVal •

    $default  reduce using rule 11 (VarDef)


State 31

   15 InitVal: Exp •

    $default  reduce using rule 15 (InitVal)


State 32

   41 Exp: LOrExp •
   43 LOrExp: LOrExp • OR LAndExp

    OR  shift, and go to state 57

    $default  reduce using rule 41 (Exp)


State 33

   42 LOrExp: LAndExp •
   45 LAndExp: LAndExp • AND EqExp

    AND  shift, and go to state 58

    $default  reduce using rule 42 (LOrExp)


State 34

   44 LAndExp: EqExp •
   47 EqExp: EqExp • EQ RelExp
   48      | EqExp • NE RelExp

    EQ  shift, and go to state 59
    NE  shift, and go to state 60

    $default  reduce using rule 44 (LAndExp)


State 35

   46 EqExp: RelExp •
   50 RelExp: RelExp • LT AddExp
   51       | RelExp • LE AddExp
   52       | RelExp • GT AddExp
   53       | RelExp • GE AddExp

    LT  shift, and go to state 61
    LE  shift, and go to state 62
    GT  shift, and go to state 63
    GE  shift, and go to state 64

    $default  reduce using rule 46 (EqExp)


State 36

   49 RelExp: AddExp •
   55 AddExp: AddExp • ADD MulExp
   56       | AddExp • SUB MulExp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66

    $default  reduce using rule 49 (RelExp)


State 37

   54 AddExp: MulExp •
   58 MulExp: MulExp • MUL UnaryExp
   59       | MulExp • DIV UnaryExp
   60       | MulExp • MOD UnaryExp

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 54 (AddExp)


State 38

   57 MulExp: UnaryExp •

    $default  reduce using rule 57 (MulExp)


State 39

   61 UnaryExp: PirmaryExp •

    $default  reduce using rule 61 (UnaryExp)


State 40

   68 PirmaryExp: LVal •

    $default  reduce using rule 68 (PirmaryExp)


State 41

   14 ArryList: ArryList LB • Number RB

    NUM  shift, and go to state 23

    Number  go to state 70


State 42

    8 VarDecl: INT VarDef VarDef_ SEMI •

    $default  reduce using rule 8 (VarDecl)


State 43

   10 VarDef_: VarDef_ COMMA • VarDef

    IDENT  shift, and go to state 8

    Ident   go to state 71
    VarDef  go to state 72


State 44

   19 FuncDef: VOID Ident LP RP • Block

    LC  shift, and go to state 47

    Block  go to state 73


State 45

   18 FuncDef: VOID Ident LP FuncParams • RP Block

    RP  shift, and go to state 74


State 46

   21 FuncParam: INT Ident •
   22          | INT Ident • LB RB ArryList

    LB  shift, and go to state 75

    $default  reduce using rule 21 (FuncParam)


State 47

   25 Block: LC • BlockItems RC

    $default  reduce using rule 26 (BlockItems)

    BlockItems  go to state 76


State 48

   17 FuncDef: INT Ident LP RP Block •

    $default  reduce using rule 17 (FuncDef)


State 49

   16 FuncDef: INT Ident LP FuncParams RP • Block

    LC  shift, and go to state 47

    Block  go to state 77


State 50

   20 FuncParams: FuncParam FuncParam_ •
   24 FuncParam_: FuncParam_ • COMMA FuncParam

    COMMA  shift, and go to state 78

    $default  reduce using rule 20 (FuncParams)


State 51

   64 UnaryExp: ADD UnaryExp •

    $default  reduce using rule 64 (UnaryExp)


State 52

   65 UnaryExp: SUB UnaryExp •

    $default  reduce using rule 65 (UnaryExp)


State 53

   66 UnaryExp: NOT UnaryExp •

    $default  reduce using rule 66 (UnaryExp)


State 54

   67 PirmaryExp: LP Exp • RP

    RP  shift, and go to state 79


State 55

   62 UnaryExp: Ident LP • FuncRParams RP
   63         | Ident LP • RP

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    RP     shift, and go to state 80
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident        go to state 28
    Number       go to state 29
    Exp          go to state 81
    LOrExp       go to state 32
    LAndExp      go to state 33
    EqExp        go to state 34
    RelExp       go to state 35
    AddExp       go to state 36
    MulExp       go to state 37
    UnaryExp     go to state 38
    PirmaryExp   go to state 39
    LVal         go to state 40
    FuncRParams  go to state 82


State 56

   70 LVal: Ident LValList •
   72 LValList: LValList • LB Exp RB

    LB  shift, and go to state 83

    $default  reduce using rule 70 (LVal)


State 57

   43 LOrExp: LOrExp OR • LAndExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    LAndExp     go to state 84
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 58

   45 LAndExp: LAndExp AND • EqExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    EqExp       go to state 85
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 59

   47 EqExp: EqExp EQ • RelExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    RelExp      go to state 86
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 60

   48 EqExp: EqExp NE • RelExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    RelExp      go to state 87
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 61

   50 RelExp: RelExp LT • AddExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    AddExp      go to state 88
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 62

   51 RelExp: RelExp LE • AddExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    AddExp      go to state 89
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 63

   52 RelExp: RelExp GT • AddExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    AddExp      go to state 90
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 64

   53 RelExp: RelExp GE • AddExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    AddExp      go to state 91
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 65

   55 AddExp: AddExp ADD • MulExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    MulExp      go to state 92
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 66

   56 AddExp: AddExp SUB • MulExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    MulExp      go to state 93
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 67

   58 MulExp: MulExp MUL • UnaryExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    UnaryExp    go to state 94
    PirmaryExp  go to state 39
    LVal        go to state 40


State 68

   59 MulExp: MulExp DIV • UnaryExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    UnaryExp    go to state 95
    PirmaryExp  go to state 39
    LVal        go to state 40


State 69

   60 MulExp: MulExp MOD • UnaryExp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    UnaryExp    go to state 96
    PirmaryExp  go to state 39
    LVal        go to state 40


State 70

   14 ArryList: ArryList LB Number • RB

    RB  shift, and go to state 97


State 71

   11 VarDef: Ident • ASSIGNOP InitVal
   12       | Ident • ArryList

    ASSIGNOP  shift, and go to state 15

    $default  reduce using rule 13 (ArryList)

    ArryList  go to state 16


State 72

   10 VarDef_: VarDef_ COMMA VarDef •

    $default  reduce using rule 10 (VarDef_)


State 73

   19 FuncDef: VOID Ident LP RP Block •

    $default  reduce using rule 19 (FuncDef)


State 74

   18 FuncDef: VOID Ident LP FuncParams RP • Block

    LC  shift, and go to state 47

    Block  go to state 98


State 75

   22 FuncParam: INT Ident LB • RB ArryList

    RB  shift, and go to state 99


State 76

   25 Block: LC BlockItems • RC
   27 BlockItems: BlockItems • BlockItem

    INT       shift, and go to state 100
    NUM       shift, and go to state 23
    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    NOT       shift, and go to state 26
    LP        shift, and go to state 27
    RC        shift, and go to state 101
    LC        shift, and go to state 47
    IF        shift, and go to state 102
    WHILE     shift, and go to state 103
    BREAK     shift, and go to state 104
    CONTINUE  shift, and go to state 105
    RETURN    shift, and go to state 106
    IDENT     shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Decl        go to state 107
    VarDecl     go to state 6
    Block       go to state 108
    BlockItem   go to state 109
    Stmt        go to state 110
    IFStmt      go to state 111
    Exp         go to state 112
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 113


State 77

   16 FuncDef: INT Ident LP FuncParams RP Block •

    $default  reduce using rule 16 (FuncDef)


State 78

   24 FuncParam_: FuncParam_ COMMA • FuncParam

    INT  shift, and go to state 19

    FuncParam  go to state 114


State 79

   67 PirmaryExp: LP Exp RP •

    $default  reduce using rule 67 (PirmaryExp)


State 80

   63 UnaryExp: Ident LP RP •

    $default  reduce using rule 63 (UnaryExp)


State 81

   73 FuncRParams: Exp • FuncRP_

    $default  reduce using rule 74 (FuncRP_)

    FuncRP_  go to state 115


State 82

   62 UnaryExp: Ident LP FuncRParams • RP

    RP  shift, and go to state 116


State 83

   72 LValList: LValList LB • Exp RB

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 117
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 84

   43 LOrExp: LOrExp OR LAndExp •
   45 LAndExp: LAndExp • AND EqExp

    AND  shift, and go to state 58

    $default  reduce using rule 43 (LOrExp)


State 85

   45 LAndExp: LAndExp AND EqExp •
   47 EqExp: EqExp • EQ RelExp
   48      | EqExp • NE RelExp

    EQ  shift, and go to state 59
    NE  shift, and go to state 60

    $default  reduce using rule 45 (LAndExp)


State 86

   47 EqExp: EqExp EQ RelExp •
   50 RelExp: RelExp • LT AddExp
   51       | RelExp • LE AddExp
   52       | RelExp • GT AddExp
   53       | RelExp • GE AddExp

    LT  shift, and go to state 61
    LE  shift, and go to state 62
    GT  shift, and go to state 63
    GE  shift, and go to state 64

    $default  reduce using rule 47 (EqExp)


State 87

   48 EqExp: EqExp NE RelExp •
   50 RelExp: RelExp • LT AddExp
   51       | RelExp • LE AddExp
   52       | RelExp • GT AddExp
   53       | RelExp • GE AddExp

    LT  shift, and go to state 61
    LE  shift, and go to state 62
    GT  shift, and go to state 63
    GE  shift, and go to state 64

    $default  reduce using rule 48 (EqExp)


State 88

   50 RelExp: RelExp LT AddExp •
   55 AddExp: AddExp • ADD MulExp
   56       | AddExp • SUB MulExp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66

    $default  reduce using rule 50 (RelExp)


State 89

   51 RelExp: RelExp LE AddExp •
   55 AddExp: AddExp • ADD MulExp
   56       | AddExp • SUB MulExp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66

    $default  reduce using rule 51 (RelExp)


State 90

   52 RelExp: RelExp GT AddExp •
   55 AddExp: AddExp • ADD MulExp
   56       | AddExp • SUB MulExp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66

    $default  reduce using rule 52 (RelExp)


State 91

   53 RelExp: RelExp GE AddExp •
   55 AddExp: AddExp • ADD MulExp
   56       | AddExp • SUB MulExp

    ADD  shift, and go to state 65
    SUB  shift, and go to state 66

    $default  reduce using rule 53 (RelExp)


State 92

   55 AddExp: AddExp ADD MulExp •
   58 MulExp: MulExp • MUL UnaryExp
   59       | MulExp • DIV UnaryExp
   60       | MulExp • MOD UnaryExp

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 55 (AddExp)


State 93

   56 AddExp: AddExp SUB MulExp •
   58 MulExp: MulExp • MUL UnaryExp
   59       | MulExp • DIV UnaryExp
   60       | MulExp • MOD UnaryExp

    MUL  shift, and go to state 67
    DIV  shift, and go to state 68
    MOD  shift, and go to state 69

    $default  reduce using rule 56 (AddExp)


State 94

   58 MulExp: MulExp MUL UnaryExp •

    $default  reduce using rule 58 (MulExp)


State 95

   59 MulExp: MulExp DIV UnaryExp •

    $default  reduce using rule 59 (MulExp)


State 96

   60 MulExp: MulExp MOD UnaryExp •

    $default  reduce using rule 60 (MulExp)


State 97

   14 ArryList: ArryList LB Number RB •

    $default  reduce using rule 14 (ArryList)


State 98

   18 FuncDef: VOID Ident LP FuncParams RP Block •

    $default  reduce using rule 18 (FuncDef)


State 99

   22 FuncParam: INT Ident LB RB • ArryList

    $default  reduce using rule 13 (ArryList)

    ArryList  go to state 118


State 100

    8 VarDecl: INT • VarDef VarDef_ SEMI

    IDENT  shift, and go to state 8

    Ident   go to state 71
    VarDef  go to state 10


State 101

   25 Block: LC BlockItems RC •

    $default  reduce using rule 25 (Block)


State 102

   39 IFStmt: IF • LP Exp RP Stmt
   40       | IF • LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 119


State 103

   34 Stmt: WHILE • LP Exp RP Stmt

    LP  shift, and go to state 120


State 104

   35 Stmt: BREAK • SEMI

    SEMI  shift, and go to state 121


State 105

   36 Stmt: CONTINUE • SEMI

    SEMI  shift, and go to state 122


State 106

   37 Stmt: RETURN • Exp SEMI
   38     | RETURN • SEMI

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    SEMI   shift, and go to state 123
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 124
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 107

   28 BlockItem: Decl •

    $default  reduce using rule 28 (BlockItem)


State 108

   32 Stmt: Block •

    $default  reduce using rule 32 (Stmt)


State 109

   27 BlockItems: BlockItems BlockItem •

    $default  reduce using rule 27 (BlockItems)


State 110

   29 BlockItem: Stmt •

    $default  reduce using rule 29 (BlockItem)


State 111

   33 Stmt: IFStmt •

    $default  reduce using rule 33 (Stmt)


State 112

   31 Stmt: Exp • SEMI

    SEMI  shift, and go to state 125


State 113

   30 Stmt: LVal • ASSIGNOP Exp SEMI
   68 PirmaryExp: LVal •

    ASSIGNOP  shift, and go to state 126

    $default  reduce using rule 68 (PirmaryExp)


State 114

   24 FuncParam_: FuncParam_ COMMA FuncParam •

    $default  reduce using rule 24 (FuncParam_)


State 115

   73 FuncRParams: Exp FuncRP_ •
   75 FuncRP_: FuncRP_ • COMMA Exp

    COMMA  shift, and go to state 127

    $default  reduce using rule 73 (FuncRParams)


State 116

   62 UnaryExp: Ident LP FuncRParams RP •

    $default  reduce using rule 62 (UnaryExp)


State 117

   72 LValList: LValList LB Exp • RB

    RB  shift, and go to state 128


State 118

   14 ArryList: ArryList • LB Number RB
   22 FuncParam: INT Ident LB RB ArryList •

    LB  shift, and go to state 41

    $default  reduce using rule 22 (FuncParam)


State 119

   39 IFStmt: IF LP • Exp RP Stmt
   40       | IF LP • Exp RP Stmt ELSE Stmt

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 129
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 120

   34 Stmt: WHILE LP • Exp RP Stmt

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 130
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 121

   35 Stmt: BREAK SEMI •

    $default  reduce using rule 35 (Stmt)


State 122

   36 Stmt: CONTINUE SEMI •

    $default  reduce using rule 36 (Stmt)


State 123

   38 Stmt: RETURN SEMI •

    $default  reduce using rule 38 (Stmt)


State 124

   37 Stmt: RETURN Exp • SEMI

    SEMI  shift, and go to state 131


State 125

   31 Stmt: Exp SEMI •

    $default  reduce using rule 31 (Stmt)


State 126

   30 Stmt: LVal ASSIGNOP • Exp SEMI

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 132
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 127

   75 FuncRP_: FuncRP_ COMMA • Exp

    NUM    shift, and go to state 23
    ADD    shift, and go to state 24
    SUB    shift, and go to state 25
    NOT    shift, and go to state 26
    LP     shift, and go to state 27
    IDENT  shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Exp         go to state 133
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 40


State 128

   72 LValList: LValList LB Exp RB •

    $default  reduce using rule 72 (LValList)


State 129

   39 IFStmt: IF LP Exp • RP Stmt
   40       | IF LP Exp • RP Stmt ELSE Stmt

    RP  shift, and go to state 134


State 130

   34 Stmt: WHILE LP Exp • RP Stmt

    RP  shift, and go to state 135


State 131

   37 Stmt: RETURN Exp SEMI •

    $default  reduce using rule 37 (Stmt)


State 132

   30 Stmt: LVal ASSIGNOP Exp • SEMI

    SEMI  shift, and go to state 136


State 133

   75 FuncRP_: FuncRP_ COMMA Exp •

    $default  reduce using rule 75 (FuncRP_)


State 134

   39 IFStmt: IF LP Exp RP • Stmt
   40       | IF LP Exp RP • Stmt ELSE Stmt

    NUM       shift, and go to state 23
    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    NOT       shift, and go to state 26
    LP        shift, and go to state 27
    LC        shift, and go to state 47
    IF        shift, and go to state 102
    WHILE     shift, and go to state 103
    BREAK     shift, and go to state 104
    CONTINUE  shift, and go to state 105
    RETURN    shift, and go to state 106
    IDENT     shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Block       go to state 108
    Stmt        go to state 137
    IFStmt      go to state 111
    Exp         go to state 112
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 113


State 135

   34 Stmt: WHILE LP Exp RP • Stmt

    NUM       shift, and go to state 23
    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    NOT       shift, and go to state 26
    LP        shift, and go to state 27
    LC        shift, and go to state 47
    IF        shift, and go to state 102
    WHILE     shift, and go to state 103
    BREAK     shift, and go to state 104
    CONTINUE  shift, and go to state 105
    RETURN    shift, and go to state 106
    IDENT     shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Block       go to state 108
    Stmt        go to state 138
    IFStmt      go to state 111
    Exp         go to state 112
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 113


State 136

   30 Stmt: LVal ASSIGNOP Exp SEMI •

    $default  reduce using rule 30 (Stmt)


State 137

   39 IFStmt: IF LP Exp RP Stmt •
   40       | IF LP Exp RP Stmt • ELSE Stmt

    ELSE  shift, and go to state 139

    ELSE      [reduce using rule 39 (IFStmt)]
    $default  reduce using rule 39 (IFStmt)


State 138

   34 Stmt: WHILE LP Exp RP Stmt •

    $default  reduce using rule 34 (Stmt)


State 139

   40 IFStmt: IF LP Exp RP Stmt ELSE • Stmt

    NUM       shift, and go to state 23
    ADD       shift, and go to state 24
    SUB       shift, and go to state 25
    NOT       shift, and go to state 26
    LP        shift, and go to state 27
    LC        shift, and go to state 47
    IF        shift, and go to state 102
    WHILE     shift, and go to state 103
    BREAK     shift, and go to state 104
    CONTINUE  shift, and go to state 105
    RETURN    shift, and go to state 106
    IDENT     shift, and go to state 8

    Ident       go to state 28
    Number      go to state 29
    Block       go to state 108
    Stmt        go to state 140
    IFStmt      go to state 111
    Exp         go to state 112
    LOrExp      go to state 32
    LAndExp     go to state 33
    EqExp       go to state 34
    RelExp      go to state 35
    AddExp      go to state 36
    MulExp      go to state 37
    UnaryExp    go to state 38
    PirmaryExp  go to state 39
    LVal        go to state 113


State 140

   40 IFStmt: IF LP Exp RP Stmt ELSE Stmt •

    $default  reduce using rule 40 (IFStmt)
