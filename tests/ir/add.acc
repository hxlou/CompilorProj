fn @getint( ) -> i32;
fn @getch( ) -> i32;
fn @getarray(#0: i32* ) -> i32;
fn @putint(#0: i32 ) -> ();
fn @putch(#0: i32 ) -> ();
fn @putarray(#0: i32, #1: i32* ) -> ();
fn @starttime( ) -> ();
fn @stoptime( ) -> ();
fn @main( ) -> i32 {
%GlobalBind:
%FuncEntry:
  let %ret = alloca i32, 1
  let %a = alloca i32, 1
  let %b = alloca i32, 1
  jmp label %FuncBody
%FuncBody:
  let %1 = call @getint
  let %2 = store %1, %a
  let %3 = call @getint
  let %4 = store %3, %b
  let %5 = load %a
  let %6 = load %b
  let %7 = add %5, %6
  let %8 = call @putint, %7
  let %9 = store 0, %ret
  jmp label %FuncRet
%FuncRet:
  let %11 = load %ret
  ret %11
}
